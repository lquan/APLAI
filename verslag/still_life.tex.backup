


\section{Maximum Density Still Life}
\subsection{Discussion}

 en \cite{upperbound}

\cite{bdd}
\subsubsection{ECLiPSe}
The formulation of the problem is as explained in \cite{paper_still,paper_still2} almost a trivial exercise in constraint programming.
Additionally, the coupling with external solvers for the linear programming allows to use a hybrid solver, which should perform considerably better.

\subsubsection{CHR}

\subsubsection{JESS}
In essence, the same solution as for Sudoku could be used: Java for
input and ``guessing''/backtracking; and Jess would make use of rules to
propagate as much as possible.


\subsection{Viewpoints and programs}

\subsection{Experiments}


\subsubsection{ECLiPSe}

\subsubsection{CHR}
\begin{verbatim}
?- time(mdsl(3)).
trying_label(6)
00000
01100
01010
00110
00000
% 87,504 inferences, 0.020 CPU in 0.024 seconds (82% CPU, 4375200 Lips)
label(6)
true. 
\end{verbatim}

\begin{verbatim}
?- time(mdsl(4)).
trying_label(11)
trying_label(10)
trying_label(9)
trying_label(8)
000000
011000
010100
001010
000110
000000
% 13,781,406 inferences, 2.290 CPU in 2.298 seconds (100% CPU, 6018081 Lips)
label(8)
true.
\end{verbatim}


\begin{verbatim}
?- time(mdsl(5)).
trying_label(16)
0000000
0110110
0110110
0000000
0110110
0110110
0000000
% 289,178 inferences, 0.050 CPU in 0.060 seconds (83% CPU, 5783560 Lips)
label(16)
true.
\end{verbatim}

\begin{verbatim}
?- time(mdsl(6)).
trying_label(22)
trying_label(21)
trying_label(20)
trying_label(19)
trying_label(18)
00000000
01100000
01010110
00110110
00000000
00110110
00110110
00000000
% 4,364,392,071 inferences, 713.940 CPU in 716.391 seconds (100% CPU, 6113108 Lips)
label(18)
true.
\end{verbatim}

\begin{verbatim}
?- time(mdsl(7)).
trying_label(29)
trying_label(28)
000000000
011011010
001010110
010010000
011101110
000010010
011010100
010110110
000000000
% 45,721,661,079 inferences, 7383.120 CPU in 7405.261 seconds (100% CPU, 6192729 Lips)
label(28)
true.

\end{verbatim}

\subsubsection{Conclusion}






